{
  "openapi": "3.0.1",
  "info": {
    "title": "My API",
    "description": "API c√≥ Authentication v?i JWT",
    "version": "v1"
  },
  "paths": {
    "/api/ProblemStats": {
      "post": {
        "tags": [
          "ProblemStats"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradedResult"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GradedResult"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GradedResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "ProblemStats"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ProblemStats/{problemId}": {
      "get": {
        "tags": [
          "ProblemStats"
        ],
        "parameters": [
          {
            "name": "problemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Process": {
      "post": {
        "tags": [
          "Process"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradedResult"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GradedResult"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GradedResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Submission": {
      "post": {
        "tags": [
          "Submission"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradedResult"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GradedResult"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GradedResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Submission"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Submission/{submissionId}": {
      "get": {
        "tags": [
          "Submission"
        ],
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Submission"
        ],
        "parameters": [
          {
            "name": "submissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Submission/userId": {
      "get": {
        "tags": [
          "Submission"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Submission/problem/{problemId}": {
      "get": {
        "tags": [
          "Submission"
        ],
        "parameters": [
          {
            "name": "problemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserProgress": {
      "post": {
        "tags": [
          "UserProgress"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradedResult"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GradedResult"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GradedResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "UserProgress"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserProgress/{userId}": {
      "get": {
        "tags": [
          "UserProgress"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorDetail": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorField"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorField": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EvaluationCriteria": {
        "type": "object",
        "properties": {
          "algorithm": {
            "type": "string",
            "nullable": true
          },
          "cleanCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GradedResult": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "problemId": {
            "type": "integer",
            "format": "int32"
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "point": {
            "type": "integer",
            "format": "int32"
          },
          "evaluationCriteria": {
            "$ref": "#/components/schemas/EvaluationCriteria"
          },
          "submissionAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "StringResult": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          },
          "errorDetail": {
            "$ref": "#/components/schemas/ErrorDetail"
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Input JWT token  format: {token}",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}